- name: 4.1.1 Ensure that the kubelet service file permissions are set to 600 or more restrictive
  block:
    - ansible.builtin.shell: stat -c %a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.1","task_description":"Ensure that the kubelet service file permissions are set to 600 or more restrictive","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == '600'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.1","task_description":"Ensure that the kubelet service file permissions are set to 600 or more restrictive","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != '600'

###
- name: 4.1.2 Ensure that the kubelet service file ownership is set to root:root
  block:
    - ansible.builtin.shell: stat -c %U:%G /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.2","task_description":"Ensure that the kubelet service file ownership is set to root:root","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == 'root:root'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.2","task_description":"Ensure that the kubelet service file ownership is set to root:root","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != 'root:root'
###
- name: 4.1.3 If proxy kubeconfig file exists ensure permissions are set to 600 or more restrictive
  block:
    - ansible.builtin.shell: ps -ef | grep kube-proxy | grep -oE "\-\-kubeconfig=[^ ]+" | awk -F= '{print $2}' | xargs stat -c %a || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.3","task_description":"If proxy kubeconfig file exists ensure permissions are set to 600 or more restrictive","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == '600'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.3","task_description":"If proxy kubeconfig file exists ensure permissions are set to 600 or more restrictive","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != '600'
###
- name: 4.1.4 If proxy kubeconfig file exists ensure ownership is set to root:root
  block:
    - ansible.builtin.shell: ps -ef | grep kube-proxy | grep -oE "\-\-kubeconfig=[^ ]+" | awk -F= '{print $2}' | xargs stat -c %U:%G || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.4","task_description":"If proxy kubeconfig file exists ensure ownership is set to root:root","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == 'root:root'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.4","task_description":"If proxy kubeconfig file exists ensure ownership is set to root:root","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != 'root:root'
###
- name: 4.1.5 Ensure that the --kubeconfig kubelet.conf file permissions are set to 600 or more restrictive
  block:
    - ansible.builtin.shell: stat -c %a /etc/kubernetes/kubelet.conf
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.5","task_description":"Ensure that the --kubeconfig kubelet.conf file permissions are set to 600 or more restrictive","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == '600'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.5","task_description":"Ensure that the --kubeconfig kubelet.conf file permissions are set to 600 or more restrictive","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != '600'
###
- name: 4.1.6 Ensure that the --kubeconfig kubelet.conf file ownership is set to root:root
  block:
    - ansible.builtin.shell: stat -c %U:%G /etc/kubernetes/kubelet.conf
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.6","task_description":"Ensure that the --kubeconfig kubelet.conf file ownership is set to root:root","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == 'root:root'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.6","task_description":"Ensure that the --kubeconfig kubelet.conf file ownership is set to root:root","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != 'root:root'
###
- name: 4.1.7 Ensure that the certificate authorities file permissions are set to 600 or more restrictive
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-client\-ca\-file=[^ ]+" | awk -F= '{print $2}' | xargs stat -c %a || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.7","task_description":"Ensure that the certificate authorities file permissions are set to 600 or more restrictive","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == '600'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.7","task_description":"Ensure that the certificate authorities file permissions are set to 600 or more restrictive","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != '600'
###
- name: 4.1.8 Ensure that the client certificate authorities file ownership is set to root:root
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-client\-ca\-file=[^ ]+" | awk -F= '{print $2}' | xargs stat -c %U:%G || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.8","task_description":"Ensure that the client certificate authorities file ownership is set to root:root","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == 'root:root'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.8","task_description":"Ensure that the client certificate authorities file ownership is set to root:root","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != 'root:root'
###
- name: 4.1.9 If the kubelet config.yaml configuration file is being used validate permissions set to 600 or more restrictive
  block:
    - ansible.builtin.shell: stat -c %a /var/lib/kubelet/config.yaml
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.9","task_description":"If the kubelet config.yaml configuration file is being used validate permissions set to 600 or more restrictive","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == '600'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.9","task_description":"If the kubelet config.yaml configuration file is being used validate permissions set to 600 or more restrictive","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != '600'
###
- name: 4.1.10 If the kubelet config.yaml configuration file is being used validate file ownership is set to root:root
  block:
    - ansible.builtin.shell: stat -c %U:%G /var/lib/kubelet/config.yaml
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.10","task_description":"If the kubelet config.yaml configuration file is being used validate file ownership is set to root:root","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == 'root:root'
    - name: Add failed task to list 
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.1.10","task_description":"If the kubelet config.yaml configuration file is being used validate file ownership is set to root:root","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != 'root:root'
###
- name: 4.2.1 Ensure that the --anonymous-auth argument is set to false
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-anonymous\-auth=[^ ]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.1","task_description":"Ensure that the --anonymous-auth argument is set to false","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: "'false' in filestat.stdout"
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.1","task_description":"Ensure that the --anonymous-auth argument is set to false","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: "'false' not in filestat.stdout"
###
- name: 4.2.2 Ensure that the --authorization-mode argument is not set to AlwaysAllow
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-authorization\-mode=[^ ]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.2","task_description":"Ensure that the --authorization-mode argument is not set to AlwaysAllow","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout != "Argument is not set" and 'AlwaysAllow' not in filestat.stdout
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.2","task_description":"Ensure that the --authorization-mode argument is not set to AlwaysAllow","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: "'AlwaysAllow' in filestat.stdout or filestat.stdout == 'Argument is not set'"
###
- name: 4.2.3 Ensure that the --client-ca-file argument is set as appropriate
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-client\-ca\-file=[^ ]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.3","task_description":"Ensure that the --client-ca-file argument is set as appropriate","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout != 'Argument is not set'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.3","task_description":"Ensure that the --client-ca-file argument is set as appropriate","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout == 'Argument is not set'
###
- name: 4.2.4 Verify that the --read-only-port argument is set to 0
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-read\-only\-port=[^ ]+" | grep -oE "[0-9]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.4","task_description":"Verify that the --read-only-port argument is set to 0","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == '0'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.4","task_description":"Verify that the --read-only-port argument is set to 0","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != '0'
###
- name: 4.2.5 Ensure that the --streaming-connection-idle-timeout argument is not set to 0
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-streaming\-connection\-idle\-timeout=[^ ]+" | grep -oE "[0-9]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.5","task_description":"Ensure that the --streaming-connection-idle-timeout argument is not set to 0","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout != "0" and filestat.stdout != "Argument is not set"
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.5","task_description":"Ensure that the --streaming-connection-idle-timeout argument is not set to 0","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout == "0" or filestat.stdout == "Argument is not set"
###
- name: 4.2.6 Ensure that the --protect-kernel-defaults argument is set to true
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-protect\-kernel\-defaults=[^ ]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.6","task_description":"Ensure that the --protect-kernel-defaults argument is set to true","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: "'true' in filestat.stdout"
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.6","task_description":"Ensure that the --protect-kernel-defaults argument is set to true","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: "'true' not in filestat.stdout"
###
- name: 4.2.7 Ensure that the --make-iptables-util-chains argument is set to true
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-make\-iptables\-util\-chains=[^ ]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.7","task_description":"Ensure that the --make-iptables-util-chains argument is set to true","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: "'true' in filestat.stdout"
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.7","task_description":"Ensure that the --make-iptables-util-chains argument is set to true","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: "'true' not in filestat.stdout"
###
- name: 4.2.8 Ensure that the --hostname-override argument is not set
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-hostname\-override=[^ ]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.8","task_description":"Ensure that the --hostname-override argument is not set","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == 'Argument is not set'
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.8","task_description":"Ensure that the --hostname-override argument is not set","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != 'Argument is not set'
###
- name: 4.2.9 Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-event\-qps=[^ ]+" | grep -oE "[0-9]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.9","task_description":"Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == "0"
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.9","task_description":"Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout != "0"
###
- name: 4.2.10 Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-tls\-(cert|private\-key)\-file =[^ ]+" || echo "Argument is not set"
      register: filestat
      ignore_errors: yes
      changed_when: false
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.10","task_description":"Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout_lines|length == 2
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.10","task_description":"Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: filestat.stdout_lines|length < 2
###
- name: 4.2.11 Ensure that the --rotate-certificates argument is not set to false
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-rotate\-certificates=[^ ]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.11","task_description":"Ensure that the --rotate-certificates argument is not set to false","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: filestat.stdout == '' or 'true' in filestat.stdout
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.11","task_description":"Ensure that the --rotate-certificates argument is not set to false","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: "'false' in filestat.stdout"
###
- name: 4.2.12 Verify that the RotateKubeletServerCertificate argument is set to true
  block:
    - ansible.builtin.shell: ps -ef | grep kubelet | grep -oE "\-\-feature\-gates=RotateKubeletServerCertificate=[^ ]+" || echo "Argument is not set"
      register: filestat
      changed_when: false
      ignore_errors: yes
    - name: Add passed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.12","task_description":"Verify that the RotateKubeletServerCertificate argument is set to true","task_status":"PASSED","configuration":filestat.stdout,"script":"" }] }}'
      when: "'true' in filestat.stdout"
    - name: Add failed task to list
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.12","task_description":"Verify that the RotateKubeletServerCertificate argument is set to true","task_status":"FAILED","configuration":filestat.stdout,"script":"Script here" }] }}'
      when: "'true' not in filestat.stdout"
###
- name: 4.2.13 Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers
  block:
    - name: Add task to list 
      set_fact:
        section4_tasks: '{{ section4_tasks + [{ "task_number":"4.2.13","task_description":"Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers ","task_status":"NOT CHECKED","configuration":filestat.stdout,"script":"" }] }}'